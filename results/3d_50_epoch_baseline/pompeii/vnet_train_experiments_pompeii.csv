Model,Input Shape,Learning Rate,Debug,Loss,Optimizer,Num. Epochs,Examples/Epoch,Min Loss,Min Val Loss,Min Roll Loss,Min Roll Val Loss,Min BCE,Min Val BCE,Min Roll BCE,Min Roll Val BCE,Min BCE + Dice Loss,Min Val BCE + Dice Loss,Min Roll BCE + Dice Loss,Min Roll Val BCE + Dice Loss,Fit,Mean loss of batch,Schedule Drop,Schedule Epochs Drop,Train Duration,Shuffle Order,Normalise Input,Remove Outliers,Skip Empty,transform_angle,transform_position,Commit ID,Train Name,Model Params,Notes
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.40049421787261963,0.3911375105381012,0.7421035766601562,0.7444732785224915,0.40049421787261963,0.3911375105381012,0.4101966917514801,0.4161491394042969,1.1456832885742188,1.1294424533843994,1.1523010730743408,1.1606216430664062,True,False,0.9,5,6580.514248362975,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-03_02_18_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7fed8885f4e0>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 1/5"
large,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.06567616015672684,0.08096934854984283,0.3177921175956726,0.7096256017684937,0.06567616015672684,0.08096934854984283,0.06769637763500214,0.08769536018371582,0.3844367563724518,0.8015375137329102,0.38956984877586365,0.8213081359863281,True,False,0.9,5,7735.513589370996,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-04_52_00_large,"{'name': 'vnet_large', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large.VNet_Large object at 0x7fecec4dbac8>, '__class__': <class 'Segmentation.model.vnet_large.VNet_Large'>}","Training Large VNet (240, 240, 160), repeat: 1/5"
large_relative,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.7189801335334778,0.38748475909233093,0.8317497372627258,0.7858543395996094,0.7189801335334778,0.38748475909233093,1.047785997390747,0.5419410467147827,1.667050838470459,1.1940586566925049,1.8811630010604858,1.3414306640625,True,False,0.9,5,8928.478557133,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-07_00_57_large_relative,"{'name': 'vnet_large_relative', 'use_stride_2': True, 'use_res_connect': True, 'output_activation': None, 'action': 'add', 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 3, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large_relative.VNet_Large_Relative object at 0x7fed600f1828>, '__class__': <class 'Segmentation.model.vnet_large_relative.VNet_Large_Relative'>}","Training Large Relative VNet (240, 240, 160), repeat: 1/5"
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,10,1,0.8835092782974243,0.9028494954109192,0.8903158903121948,0.9053263664245605,0.7889746427536011,0.5192838311195374,0.9112626910209656,0.6014115214347839,1.7259018421173096,1.4270880222320557,1.8015787601470947,1.5090322494506836,True,False,0.9,5,1324.7979716169648,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-10_36_58_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7feb0c58c470>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 1/1"
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.8030027747154236,0.8091869354248047,0.8051048517227173,0.8117164373397827,0.5978670716285706,0.39747855067253113,0.602996826171875,0.4382125735282898,1.4035671949386597,1.209082841873169,1.4081008434295654,1.2499313354492188,True,False,0.9,3,6574.334667852032,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-11_16_41_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7fa3a7bc2438>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 1/5"
large,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.34491708874702454,0.36960190534591675,0.34843748807907104,0.3800705075263977,0.0612650103867054,0.05058540031313896,0.06208406761288643,0.05214376375079155,0.41274014115333557,0.42329320311546326,0.41637420654296875,0.43467482924461365,True,False,0.9,3,7744.393416406005,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-13_06_17_large,"{'name': 'vnet_large', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large.VNet_Large object at 0x7fa2cc33a550>, '__class__': <class 'Segmentation.model.vnet_large.VNet_Large'>}","Training Large VNet (240, 240, 160), repeat: 1/5"
large_relative,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.637807309627533,0.8979393243789673,0.6637130975723267,0.9534093737602234,0.2074831873178482,0.10325565934181213,0.2172856330871582,0.16481056809425354,0.8571254014968872,1.0158424377441406,0.8995468020439148,1.1182199716567993,True,False,0.9,5,8920.074740483076,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-15_15_22_large_relative,"{'name': 'vnet_large_relative', 'use_stride_2': True, 'use_res_connect': True, 'output_activation': None, 'action': 'add', 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 3, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large_relative.VNet_Large_Relative object at 0x7fa32c115e80>, '__class__': <class 'Segmentation.model.vnet_large_relative.VNet_Large_Relative'>}","Training Large Relative VNet (240, 240, 160), repeat: 1/5"
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.5084385275840759,0.535731315612793,0.512952446937561,0.5465156435966492,0.10384426265954971,0.07902713119983673,0.10611104965209961,0.08393874019384384,0.6198691725730896,0.6281251311302185,0.6253128051757812,0.637371838092804,True,False,0.9,3,6550.856576676946,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-17_44_04_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7fa351f267b8>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 2/5"
large,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.3622383773326874,0.44819948077201843,0.3656986355781555,0.49540138244628906,0.06543754041194916,0.06865393370389938,0.06653013080358505,0.09457997977733612,0.43113967776298523,0.5609422922134399,0.4391094148159027,0.6323909759521484,True,False,0.9,3,7728.30834592192,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-19_33_16_large,"{'name': 'vnet_large', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large.VNet_Large object at 0x7fa35004fe80>, '__class__': <class 'Segmentation.model.vnet_large.VNet_Large'>}","Training Large VNet (240, 240, 160), repeat: 2/5"
large_relative,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.6628102660179138,0.9466454386711121,0.6771835088729858,0.9649631381034851,0.21375122666358948,0.13013026118278503,0.23130688071250916,0.17880940437316895,0.892387866973877,1.0799672603607178,0.9285003542900085,1.1638697385787964,True,False,0.9,5,8905.521040245076,True,True,True,True,False,normal,cb39158,train_session_2020_03_24-21_42_06_large_relative,"{'name': 'vnet_large_relative', 'use_stride_2': True, 'use_res_connect': True, 'output_activation': None, 'action': 'add', 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 3, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large_relative.VNet_Large_Relative object at 0x7fa3400cf5f8>, '__class__': <class 'Segmentation.model.vnet_large_relative.VNet_Large_Relative'>}","Training Large Relative VNet (240, 240, 160), repeat: 2/5"
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.46671292185783386,0.7640234231948853,0.4719947874546051,0.7756279110908508,0.09417082369327545,0.1226448342204094,0.09864971786737442,0.13246126472949982,0.5855820775032043,0.8958496451377869,0.5922451019287109,0.9160346984863281,True,False,0.9,3,6601.440012163017,True,True,True,True,False,normal,cb39158,train_session_2020_03_25-00_10_33_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7fa2cc40c588>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 3/5"
large,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.8072883486747742,0.8431457877159119,0.8109756708145142,0.8459419012069702,0.2486562430858612,0.36158856749534607,0.2558261752128601,0.379660427570343,1.0559444427490234,1.2047340869903564,1.0668022632598877,1.2261444330215454,True,False,0.9,3,7786.262701706961,True,True,True,True,False,normal,cb39158,train_session_2020_03_25-02_00_36_large,"{'name': 'vnet_large', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large.VNet_Large object at 0x7fa2cc3aff28>, '__class__': <class 'Segmentation.model.vnet_large.VNet_Large'>}","Training Large VNet (240, 240, 160), repeat: 3/5"
large_relative,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.8269016146659851,0.794556200504303,0.8334258794784546,0.8199783563613892,0.7246800661087036,0.21646209061145782,1.1836745738983154,0.2568119168281555,1.6723837852478027,1.125077724456787,2.017469882965088,1.1422103643417358,True,False,0.9,5,8929.701882019988,True,True,True,True,False,normal,cb39158,train_session_2020_03_25-04_10_24_large_relative,"{'name': 'vnet_large_relative', 'use_stride_2': True, 'use_res_connect': True, 'output_activation': None, 'action': 'add', 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'start_kernel_size': (5, 5, 5), 'num_conv_layers': 3, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_large_relative.VNet_Large_Relative object at 0x7fa3e8ca1400>, '__class__': <class 'Segmentation.model.vnet_large_relative.VNet_Large_Relative'>}","Training Large Relative VNet (240, 240, 160), repeat: 3/5"
small,"(240, 240, 160)",0.0005,,dice loss,adam_schedule,50,1,0.5288093686103821,0.5199446082115173,0.5424888730049133,0.529452919960022,0.11217490583658218,0.06563280522823334,0.11892630904912949,0.06867651641368866,0.6590802073478699,0.5942891836166382,0.6892135739326477,0.6054760217666626,True,False,0.9,3,6593.282523547998,True,True,True,True,False,normal,cb39158,train_session_2020_03_25-06_39_15_small,"{'name': 'vnet_small', 'use_stride_2': True, 'use_res_connect': True, 'noise': 0.0001, 'output_activation': None, 'merge_connections': True, 'data_format': 'channels_last', 'use_spatial_dropout': True, 'dropout_rate': 0.25, 'use_batchnorm': True, 'nonlinearity': 'relu', 'kernel_size': (3, 3, 3), 'num_conv_layers': 2, 'num_classes': 1, 'num_channels': 1, 'self': <Segmentation.model.vnet_small.VNet_Small object at 0x7fa2cc2f7fd0>, '__class__': <class 'Segmentation.model.vnet_small.VNet_Small'>}","Training Small VNet (240, 240, 160), repeat: 4/5"
